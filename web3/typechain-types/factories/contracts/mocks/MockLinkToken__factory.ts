/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockLinkToken,
  MockLinkTokenInterface,
} from "../../../contracts/mocks/MockLinkToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600f81526020016e21b430b4b73634b735902a37b5b2b760891b815250604051806040016040528060048152602001634c494e4b60e01b81525081600390816200006891906200022b565b5060046200007782826200022b565b505050620000b1336200008f620000b760201b60201c565b6200009c90600a6200040c565b620000ab90620f424062000424565b620000bc565b62000454565b601290565b6001600160a01b038216620001175760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200012b91906200043e565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001b257607f821691505b602082108103620001d357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018257600081815260208120601f850160051c81016020861015620002025750805b601f850160051c820191505b8181101562000223578281556001016200020e565b505050505050565b81516001600160401b0381111562000247576200024762000187565b6200025f816200025884546200019d565b84620001d9565b602080601f8311600181146200029757600084156200027e5750858301515b600019600386901b1c1916600185901b17855562000223565b600085815260208120601f198616915b82811015620002c857888601518255948401946001909101908401620002a7565b5085821015620002e75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200034e578160001904821115620003325762000332620002f7565b808516156200034057918102915b93841c939080029062000312565b509250929050565b600082620003675750600162000406565b81620003765750600062000406565b81600181146200038f57600281146200039a57620003ba565b600191505062000406565b60ff841115620003ae57620003ae620002f7565b50506001821b62000406565b5060208310610133831016604e8410600b8410161715620003df575081810a62000406565b620003eb83836200030d565b8060001904821115620004025762000402620002f7565b0290505b92915050565b60006200041d60ff84168362000356565b9392505050565b8082028115828204841417620004065762000406620002f7565b80820180821115620004065762000406620002f7565b61094680620004646000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80634000aea0116100715780634000aea01461014157806370a082311461015457806395d89b411461017d578063a457c2d714610185578063a9059cbb14610198578063dd62ed3e146101ab57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101be565b6040516100ce9190610709565b60405180910390f35b6100ea6100e5366004610773565b610250565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a36600461079d565b61026a565b604051601281526020016100ce565b6100ea61013c366004610773565b61028e565b6100ea61014f3660046107d9565b6102b0565b6100fe610162366004610860565b6001600160a01b031660009081526020819052604090205490565b6100c1610304565b6100ea610193366004610773565b610313565b6100ea6101a6366004610773565b61038e565b6100fe6101b9366004610882565b61039c565b6060600380546101cd906108b5565b80601f01602080910402602001604051908101604052809291908181526020018280546101f9906108b5565b80156102465780601f1061021b57610100808354040283529160200191610246565b820191906000526020600020905b81548152906001019060200180831161022957829003601f168201915b5050505050905090565b60003361025e8185856103c7565b60019150505b92915050565b6000336102788582856104eb565b610283858585610565565b506001949350505050565b60003361025e8185856102a1838361039c565b6102ab91906108ef565b6103c7565b60006102bc858561038e565b6102835760405162461bcd60e51b815260206004820152601460248201527313125392c81d1c985b9cd9995c8819985a5b195960621b60448201526064015b60405180910390fd5b6060600480546101cd906108b5565b60003381610321828661039c565b9050838110156103815760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fb565b61028382868684036103c7565b60003361025e818585610565565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104295760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fb565b6001600160a01b03821661048a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006104f7848461039c565b9050600019811461055f57818110156105525760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102fb565b61055f84848484036103c7565b50505050565b6001600160a01b0383166105c95760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fb565b6001600160a01b03821661062b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fb565b6001600160a01b038316600090815260208190526040902054818110156106a35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fb565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361055f565b600060208083528351808285015260005b818110156107365785810183015185820160400152820161071a565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461076e57600080fd5b919050565b6000806040838503121561078657600080fd5b61078f83610757565b946020939093013593505050565b6000806000606084860312156107b257600080fd5b6107bb84610757565b92506107c960208501610757565b9150604084013590509250925092565b600080600080606085870312156107ef57600080fd5b6107f885610757565b935060208501359250604085013567ffffffffffffffff8082111561081c57600080fd5b818701915087601f83011261083057600080fd5b81358181111561083f57600080fd5b88602082850101111561085157600080fd5b95989497505060200194505050565b60006020828403121561087257600080fd5b61087b82610757565b9392505050565b6000806040838503121561089557600080fd5b61089e83610757565b91506108ac60208401610757565b90509250929050565b600181811c908216806108c957607f821691505b6020821081036108e957634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561026457634e487b7160e01b600052601160045260246000fdfea2646970667358221220ad88bd168fb7f7f54891e150a77a3d9209d561bbc14b6cf3752e4dfedf99b02464736f6c63430008140033";

type MockLinkTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockLinkTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockLinkToken__factory extends ContractFactory {
  constructor(...args: MockLinkTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockLinkToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockLinkToken__factory {
    return super.connect(runner) as MockLinkToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLinkTokenInterface {
    return new Interface(_abi) as MockLinkTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockLinkToken {
    return new Contract(address, _abi, runner) as unknown as MockLinkToken;
  }
}
