/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  MockOracle,
  MockOracleInterface,
} from "../../../../contracts/mocks/MockOracle.sol/MockOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "specId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "requester",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "callbackAddr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "callbackFunctionId",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cancelExpiration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dataVersion",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "OracleRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "EXPIRY_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LINK",
    outputs: [
      {
        internalType: "contract ILinkTokenInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "payment",
        type: "uint256",
      },
      {
        internalType: "bytes4",
        name: "callbackFunc",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "cancelOracleRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "payment",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "callbackAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "callbackFunctionId",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "fulfillOracleRequest2",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "payment",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "callbackAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "callbackFunctionId",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "fulfillRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "payment",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "specId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callbackAddress",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "callbackFunctionId",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dataVersion",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "oracleRequest",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610e32380380610e3283398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610d46806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636ee4d553116100715780636ee4d55314610133578063715018a6146101485780638da5cb5b1461015057806397ee1dbb14610161578063f2fde38b14610174578063f3fef3a31461018757600080fd5b80631b6b6d23146100ae57806340429946146100de5780634b602282146100ff57806350188301146101085780636ae0bc7614610110575b600080fd5b6001546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f16100ec36600461098c565b61019a565b6040519081526020016100d5565b6100f161012c81565b6100f1610346565b61012361011e366004610a2b565b6103b8565b60405190151581526020016100d5565b610146610141366004610aad565b610557565b005b6101466105b7565b6000546001600160a01b03166100c1565b61012361016f366004610aea565b6105cb565b610146610182366004610b42565b610768565b610146610195366004610b64565b6107e1565b6040516bffffffffffffffffffffffff1960608b901b1660208201526034810185905260009060540160408051601f198184030181529181528151602092830120600081815260029093529120549091506001600160a01b03161561023d5760405162461bcd60e51b8152602060048201526014602482015273135d5cdd081d5cd94818481d5b9a5c5d5948125160621b60448201526064015b60405180910390fd5b604080516080810182526001600160a01b03891681526001600160e01b03198816602082015290810161027261012c42610b8e565b81526020018484604051610287929190610bb5565b604080519182900390912090915260008381526002602081815291839020845181549386015160e01c600160a01b026001600160c01b03199094166001600160a01b0390911617929092178255918301516001820155606090920151910155877fd8d7ecc4800d25fa53ce0372f13a416d98907a7ef3d8d3bdd79cf4fe75529c658b838c8b8b61031961012c42610b8e565b8b8b8b60405161033199989796959493929190610bee565b60405180910390a29998505050505050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561038f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b39190610c58565b905090565b6000878152600260208181526040808420815160808101835281546001600160a01b038116808352600160a01b90910460e01b6001600160e01b0319169482019490945260018201549281019290925290920154606083015261042d5760405162461bcd60e51b815260040161023490610c71565b42816040015110156104735760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b6044820152606401610234565b600089815260026020818152604080842080546001600160c01b03191681556001810185905590920183905583519084015191516001600160a01b0390911691906104c6908d9089908990602401610c9c565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516105049190610cbf565b6000604051808303816000865af19150503d8060008114610541576040519150601f19603f3d011682016040523d82523d6000602084013e610546565b606091505b50909b9a5050505050505050505050565b6000848152600260205260409020546001600160a01b031661058b5760405162461bcd60e51b815260040161023490610c71565b5050506000908152600260208190526040822080546001600160c01b0319168155600181018390550155565b6105bf610865565b6105c960006108bf565b565b6000868152600260208181526040808420815160808101835281546001600160a01b038116808352600160a01b90910460e01b6001600160e01b031916948201949094526001820154928101929092529092015460608301526106405760405162461bcd60e51b815260040161023490610c71565b42816040015110156106865760405162461bcd60e51b815260206004820152600f60248201526e14995c5d595cdd08195e1c1a5c9959608a1b6044820152606401610234565b600088815260026020818152604080842080546001600160c01b0319168155600181018590559092018390558351908401519151602481018c9052604481018790526001600160a01b03909116919060640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516107169190610cbf565b6000604051808303816000865af19150503d8060008114610753576040519150601f19603f3d011682016040523d82523d6000602084013e610758565b606091505b50909a9950505050505050505050565b610770610865565b6001600160a01b0381166107d55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610234565b6107de816108bf565b50565b6107e9610865565b60015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af115801561083c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108609190610cee565b505050565b6000546001600160a01b031633146105c95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610234565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461092657600080fd5b919050565b80356001600160e01b03198116811461092657600080fd5b60008083601f84011261095557600080fd5b50813567ffffffffffffffff81111561096d57600080fd5b60208301915083602082850101111561098557600080fd5b9250929050565b60008060008060008060008060006101008a8c0312156109ab57600080fd5b6109b48a61090f565b985060208a0135975060408a013596506109d060608b0161090f565b95506109de60808b0161092b565b945060a08a0135935060c08a0135925060e08a013567ffffffffffffffff811115610a0857600080fd5b610a148c828d01610943565b915080935050809150509295985092959850929598565b600080600080600080600060c0888a031215610a4657600080fd5b8735965060208801359550610a5d6040890161090f565b9450610a6b6060890161092b565b93506080880135925060a088013567ffffffffffffffff811115610a8e57600080fd5b610a9a8a828b01610943565b989b979a50959850939692959293505050565b60008060008060808587031215610ac357600080fd5b8435935060208501359250610ada6040860161092b565b9396929550929360600135925050565b60008060008060008060c08789031215610b0357600080fd5b8635955060208701359450610b1a6040880161090f565b9350610b286060880161092b565b92506080870135915060a087013590509295509295509295565b600060208284031215610b5457600080fd5b610b5d8261090f565b9392505050565b60008060408385031215610b7757600080fd5b610b808361090f565b946020939093013593505050565b80820180821115610baf57634e487b7160e01b600052601160045260246000fd5b92915050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038a81168252602082018a905260408201899052871660608201526001600160e01b03198616608082015260a0810185905260c0810184905261010060e08201819052600090610c488382018587610bc5565b9c9b505050505050505050505050565b600060208284031215610c6a57600080fd5b5051919050565b60208082526011908201527014995c5d595cdd081b9bdd08199bdd5b99607a1b604082015260600190565b838152604060208201526000610cb6604083018486610bc5565b95945050505050565b6000825160005b81811015610ce05760208186018101518583015201610cc6565b506000920191825250919050565b600060208284031215610d0057600080fd5b81518015158114610b5d57600080fdfea2646970667358221220f95094d5703f01efa82e9ab840f49f4865db8c5b4697ab9ba3540f4d1d2edee264736f6c63430008140033";

type MockOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockOracle__factory extends ContractFactory {
  constructor(...args: MockOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _link: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_link, overrides || {});
  }
  override deploy(
    _link: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_link, overrides || {}) as Promise<
      MockOracle & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockOracle__factory {
    return super.connect(runner) as MockOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockOracleInterface {
    return new Interface(_abi) as MockOracleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockOracle {
    return new Contract(address, _abi, runner) as unknown as MockOracle;
  }
}
