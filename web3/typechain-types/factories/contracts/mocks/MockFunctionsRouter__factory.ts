/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockFunctionsRouter,
  MockFunctionsRouterInterface,
} from "../../../contracts/mocks/MockFunctionsRouter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "RequestProcessed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "fulfillRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRequestConfig",
    outputs: [
      {
        internalType: "uint32",
        name: "fulfillmentGasLimit",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "requestTimeoutSeconds",
        type: "uint32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "sendRequest",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6107d08061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100615760003560e01c80620122911461006657806339b0512214610083578063690ad8f214610098578063715018a6146100b95780638da5cb5b146100c1578063f2fde38b146100dc575b600080fd5b60408051620493e0815261012c6020820152015b60405180910390f35b61009661009136600461055f565b6100ef565b005b6100ab6100a63660046105e5565b61028e565b60405190815260200161007a565b610096610385565b6000546040516001600160a01b03909116815260200161007a565b6100966100ea36600461068a565b610399565b600083815260016020526040902080546001600160a01b031661014d5760405162461bcd60e51b815260206004820152601160248201527014995c5d595cdd081b9bdd08199bdd5b99607a1b60448201526064015b60405180910390fd5b8054600160a01b900460ff16156101a65760405162461bcd60e51b815260206004820152601960248201527f5265717565737420616c72656164792066756c66696c6c6564000000000000006044820152606401610144565b805460ff60a01b198116600160a01b178255604051630ca7617560e01b81526001600160a01b0390911690630ca76175906101e990879087908790600401610700565b600060405180830381600087803b15801561020357600080fd5b505af1158015610217573d6000803e3d6000fd5b50505050837fcd961f6ba50fcf8173552234bd381624878700df58159a1f90fb60e5ed40d331848460405161024d929190610735565b60405180910390a2505050600090815260016020908152604080832080546001600160a81b03191690556002909152902080546001600160a01b0319169055565b600380546000918261029f83610763565b919050555060008086866040516102b792919061078a565b6040519081900390209050600081901a60558110156102d957604092506102f3565b60aa8160ff1610156102ee5760a092506102f3565b60e092505b505060035460408051808201825233808252600060208084018281526001600160f81b031960f89890981b97909716605884901b17909517808252600186528482209351845497511515600160a01b026001600160a81b03199098166001600160a01b0391909116179690961790925560029093522080546001600160a01b0319169091179055905095945050505050565b61038d610412565b610397600061046c565b565b6103a1610412565b6001600160a01b0381166104065760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610144565b61040f8161046c565b50565b6000546001600160a01b031633146103975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610144565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126104e357600080fd5b813567ffffffffffffffff808211156104fe576104fe6104bc565b604051601f8301601f19908116603f01168101908282118183101715610526576105266104bc565b8160405283815286602085880101111561053f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561057457600080fd5b83359250602084013567ffffffffffffffff8082111561059357600080fd5b61059f878388016104d2565b935060408601359150808211156105b557600080fd5b506105c2868287016104d2565b9150509250925092565b803563ffffffff811681146105e057600080fd5b919050565b6000806000806000608086880312156105fd57600080fd5b853567ffffffffffffffff808216821461061657600080fd5b9095506020870135908082111561062c57600080fd5b818801915088601f83011261064057600080fd5b81358181111561064f57600080fd5b89602082850101111561066157600080fd5b602083019650809550505050610679604087016105cc565b949793965091946060013592915050565b60006020828403121561069c57600080fd5b81356001600160a01b03811681146106b357600080fd5b9392505050565b6000815180845260005b818110156106e0576020818501810151868301820152016106c4565b506000602082860101526020601f19601f83011685010191505092915050565b83815260606020820152600061071960608301856106ba565b828103604084015261072b81856106ba565b9695505050505050565b60408152600061074860408301856106ba565b828103602084015261075a81856106ba565b95945050505050565b60006001820161078357634e487b7160e01b600052601160045260246000fd5b5060010190565b818382376000910190815291905056fea2646970667358221220983b4af3895f7a4409a70b7e24f44f0f7b2a1b71fb556ba70d03c2a4dfde39d164736f6c63430008140033";

type MockFunctionsRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockFunctionsRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockFunctionsRouter__factory extends ContractFactory {
  constructor(...args: MockFunctionsRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockFunctionsRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockFunctionsRouter__factory {
    return super.connect(runner) as MockFunctionsRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockFunctionsRouterInterface {
    return new Interface(_abi) as MockFunctionsRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockFunctionsRouter {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockFunctionsRouter;
  }
}
