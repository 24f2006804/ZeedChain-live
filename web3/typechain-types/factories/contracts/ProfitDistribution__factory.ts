/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ProfitDistribution,
  ProfitDistributionInterface,
} from "../../contracts/ProfitDistribution";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_fractionalInvestment",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "distributionIndex",
        type: "uint256",
      },
    ],
    name: "ProfitClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "distributionIndex",
        type: "uint256",
      },
    ],
    name: "ProfitDistributed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "distributionIndex",
        type: "uint256",
      },
    ],
    name: "claimProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
    ],
    name: "distributeProfit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "distributions",
    outputs: [
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remainingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fractionalInvestment",
    outputs: [
      {
        internalType: "contract FractionalInvestment",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
    ],
    name: "getUnclaimedDistributions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lastDistributionIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610e3a380380610e3a83398101604081905261002f91610045565b60016000556001600160a01b0316608052610075565b60006020828403121561005757600080fd5b81516001600160a01b038116811461006e57600080fd5b9392505050565b608051610d966100a46000396000818160b7015281816103a90152818161065601526107110152610d966000f3fe6080604052600436106100595760003560e01c80630be97c01146100655780631926b017146100a557806351f20abb146100f1578063d36dfac81461012c578063d39b9d1e14610141578063da958c4d1461016e57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b506100856100803660046109e8565b61018e565b604080519384526020840192909252908201526060015b60405180910390f35b3480156100b157600080fd5b506100d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161009c565b3480156100fd57600080fd5b5061011e61010c366004610a0a565b60026020526000908152604090205481565b60405190815260200161009c565b61013f61013a366004610a0a565b6101d0565b005b34801561014d57600080fd5b5061016161015c366004610a38565b6102bb565b60405161009c9190610a68565b34801561017a57600080fd5b5061013f6101893660046109e8565b610503565b600160205281600052604060002081815481106101aa57600080fd5b600091825260209091206004909102018054600182015460029092015490935090915083565b6101d861098f565b6000341161022d5760405162461bcd60e51b815260206004820152601760248201527f4e6f2070726f66697420746f206469737472696275746500000000000000000060448201526064015b60405180910390fd5b6000818152600160208181526040808420805480850182559085528285203460048302909101818155948501819055426002808701919091558787528452948290208190558151948552918401829052909284917f35a0431ae8ac3e583720a9e25576a99b5b4bb2cb375a867047eef1e6ea81b26f910160405180910390a250506102b86001600055565b50565b6000828152600160205260408120546060919067ffffffffffffffff8111156102e6576102e6610aac565b60405190808252806020026020018201604052801561030f578160200160208202803683370190505b5090506000805b60008681526001602052604090205481101561045b57600086815260016020526040902080548290811061034c5761034c610ac2565b600091825260208083206001600160a01b03891684526003600490930201919091019052604090205460ff161580156104185750604051637bf69ca960e01b8152600481018790526001600160a01b0386811660248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690637bf69ca990604401602060405180830381865afa1580156103f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104169190610ad8565b115b15610449578083838151811061043057610430610ac2565b60209081029190910101528161044581610b07565b9250505b8061045381610b07565b915050610316565b5060008167ffffffffffffffff81111561047757610477610aac565b6040519080825280602002602001820160405280156104a0578160200160208202803683370190505b50905060005b828110156104f7578381815181106104c0576104c0610ac2565b60200260200101518282815181106104da576104da610ac2565b6020908102919091010152806104ef81610b07565b9150506104a6565b50925050505b92915050565b61050b61098f565b60008281526001602052604090205481106105685760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420646973747269627574696f6e20696e6465780000000000006044820152606401610224565b600082815260016020526040812080548390811061058857610588610ac2565b600091825260208083203384526003600490930201918201905260409091205490915060ff16156105ed5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b6044820152606401610224565b60008160010154116106375760405162461bcd60e51b8152602060048201526013602482015272139bc81c995b585a5b9a5b99c81c1c9bd99a5d606a1b6044820152606401610224565b604051637bf69ca960e01b8152600481018490523360248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637bf69ca990604401602060405180830381865afa1580156106a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c99190610ad8565b90506000811161070d5760405162461bcd60e51b815260206004820152600f60248201526e139bc81cda185c995cc81bdddb9959608a1b6044820152606401610224565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636b5351db6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107919190610b20565b6001600160a01b03166375a770e5866040518263ffffffff1660e01b81526004016107be91815260200190565b600060405180830381865afa1580156107db573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108039190810190610c43565b6040810151845491925090600090829061081e908690610d14565b6108289190610d2b565b9050846001015481111561087e5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742072656d61696e696e6720616d6f756e740000006044820152606401610224565b3360009081526003860160205260408120805460ff19166001908117909155860180548392906108af908490610d4d565b9091555050604051600090339083908381818185875af1925050503d80600081146108f6576040519150601f19603f3d011682016040523d82523d6000602084013e6108fb565b606091505b505090508061093e5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610224565b604080518381526020810189905233918a917fa3a256da95cea8043e1b869c547b6a96282c899016cc3f7a4d8bcb5f12377293910160405180910390a350505050505061098b6001600055565b5050565b6002600054036109e15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610224565b6002600055565b600080604083850312156109fb57600080fd5b50508035926020909101359150565b600060208284031215610a1c57600080fd5b5035919050565b6001600160a01b03811681146102b857600080fd5b60008060408385031215610a4b57600080fd5b823591506020830135610a5d81610a23565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b81811015610aa057835183529284019291840191600101610a84565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215610aea57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600060018201610b1957610b19610af1565b5060010190565b600060208284031215610b3257600080fd5b8151610b3d81610a23565b9392505050565b60405160e0810167ffffffffffffffff81118282101715610b6757610b67610aac565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b9657610b96610aac565b604052919050565b600082601f830112610baf57600080fd5b815167ffffffffffffffff811115610bc957610bc9610aac565b6020610bdd601f8301601f19168201610b6d565b8281528582848701011115610bf157600080fd5b60005b83811015610c0f578581018301518282018401528201610bf4565b506000928101909101919091529392505050565b8051610c2e81610a23565b919050565b80518015158114610c2e57600080fd5b600060208284031215610c5557600080fd5b815167ffffffffffffffff80821115610c6d57600080fd5b9083019060e08286031215610c8157600080fd5b610c89610b44565b825182811115610c9857600080fd5b610ca487828601610b9e565b825250602083015182811115610cb957600080fd5b610cc587828601610b9e565b602083015250604083015160408201526060830151606082015260808301516080820152610cf560a08401610c23565b60a0820152610d0660c08401610c33565b60c082015295945050505050565b80820281158282048414176104fd576104fd610af1565b600082610d4857634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156104fd576104fd610af156fea2646970667358221220e9f3a33235232527f468330741c9c2697f30a7dc6e4c9428515dab7efebf9a6664736f6c63430008140033";

type ProfitDistributionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfitDistributionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProfitDistribution__factory extends ContractFactory {
  constructor(...args: ProfitDistributionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _fractionalInvestment: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_fractionalInvestment, overrides || {});
  }
  override deploy(
    _fractionalInvestment: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_fractionalInvestment, overrides || {}) as Promise<
      ProfitDistribution & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProfitDistribution__factory {
    return super.connect(runner) as ProfitDistribution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfitDistributionInterface {
    return new Interface(_abi) as ProfitDistributionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ProfitDistribution {
    return new Contract(address, _abi, runner) as unknown as ProfitDistribution;
  }
}
