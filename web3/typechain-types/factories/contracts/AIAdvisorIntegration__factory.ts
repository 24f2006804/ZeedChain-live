/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AIAdvisorIntegration,
  AIAdvisorIntegrationInterface,
} from "../../contracts/AIAdvisorIntegration";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "donId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "source",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "recommendation",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "confidenceScore",
        type: "uint256",
      },
    ],
    name: "AdviceReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
    ],
    name: "AdviceRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "RequestFailed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
    ],
    name: "getAllAdvice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "startupId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "confidenceScore",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "recommendation",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isValid",
            type: "bool",
          },
        ],
        internalType: "struct AIAdvisorIntegration.AIAdvice[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
    ],
    name: "getLatestAdvice",
    outputs: [
      {
        internalType: "string",
        name: "recommendation",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "confidenceScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "response",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "handleOracleFulfillment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
    ],
    name: "requestAIAdvice",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "startupAdvice",
    outputs: [
      {
        internalType: "uint256",
        name: "startupId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "confidenceScore",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "recommendation",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "donId",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "gasLimit",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "source",
        type: "bytes",
      },
    ],
    name: "updateConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type AIAdvisorIntegrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AIAdvisorIntegrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AIAdvisorIntegration__factory extends ContractFactory {
  constructor(...args: AIAdvisorIntegrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    subscriptionId: BigNumberish,
    donId: BytesLike,
    source: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      router,
      subscriptionId,
      donId,
      source,
      overrides || {}
    );
  }
  override deploy(
    router: AddressLike,
    subscriptionId: BigNumberish,
    donId: BytesLike,
    source: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      router,
      subscriptionId,
      donId,
      source,
      overrides || {}
    ) as Promise<
      AIAdvisorIntegration & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): AIAdvisorIntegration__factory {
    return super.connect(runner) as AIAdvisorIntegration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AIAdvisorIntegrationInterface {
    return new Interface(_abi) as AIAdvisorIntegrationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AIAdvisorIntegration {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as AIAdvisorIntegration;
  }
}
